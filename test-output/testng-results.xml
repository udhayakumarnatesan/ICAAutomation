<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="45550" started-at="2018-12-18T05:38:33Z" finished-at="2018-12-18T05:39:18Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="45550" started-at="2018-12-18T05:38:33Z" finished-at="2018-12-18T05:39:18Z">
      <class name="gov.mst.automation.ica.executionpage.Execution">
        <test-method status="PASS" signature="startReport()[pri:0, instance:gov.mst.automation.ica.executionpage.Execution@8bd1b6a]" name="startReport" is-config="true" duration-ms="240" started-at="2018-12-18T11:08:33Z" finished-at="2018-12-18T11:08:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="login(java.lang.String)[pri:0, instance:gov.mst.automation.ica.executionpage.Execution@8bd1b6a]" name="login" is-config="true" duration-ms="5004" started-at="2018-12-18T11:08:33Z" finished-at="2018-12-18T11:08:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="FAIL" signature="executionPage()[pri:0, instance:gov.mst.automation.ica.executionpage.Execution@8bd1b6a]" name="executionPage" duration-ms="37202" started-at="2018-12-18T11:08:38Z" finished-at="2018-12-18T11:09:15Z">
          <exception class="java.lang.Exception">
            <message>
              <![CDATA[The given content value in excel is not matched with the fetched data ]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Exception: The given content value in excel is not matched with the fetched data 
	at gov.mst.automation.ica.email.EmailVerify.emailVerify(EmailVerify.java:77)
	at gov.mst.automation.ica.pages.IndustrialInjuryForm.industrialInjuryWebForm(IndustrialInjuryForm.java:216)
	at gov.mst.automation.ica.executionpage.Execution.executionPage(Execution.java:26)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Exception -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executionPage -->
        <test-method status="PASS" signature="checkTestAfterExecution(org.testng.ITestResult)[pri:0, instance:gov.mst.automation.ica.executionpage.Execution@8bd1b6a]" name="checkTestAfterExecution" is-config="true" duration-ms="297" started-at="2018-12-18T11:09:15Z" finished-at="2018-12-18T11:09:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=executionPage status=FAILURE method=Execution.executionPage()[pri:0, instance:gov.mst.automation.ica.executionpage.Execution@8bd1b6a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestAfterExecution -->
        <test-method status="PASS" signature="logout()[pri:0, instance:gov.mst.automation.ica.executionpage.Execution@8bd1b6a]" name="logout" is-config="true" duration-ms="3004" started-at="2018-12-18T11:09:15Z" finished-at="2018-12-18T11:09:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:gov.mst.automation.ica.executionpage.Execution@8bd1b6a]" name="tearDown" is-config="true" duration-ms="2775" started-at="2018-12-18T11:09:18Z" finished-at="2018-12-18T11:09:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- gov.mst.automation.ica.executionpage.Execution -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
